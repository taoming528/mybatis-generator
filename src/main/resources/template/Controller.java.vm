package ${package.Controller};
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import io.swagger.annotations.*;
import springfox.documentation.annotations.ApiIgnore;
import com.qy.dome.common.enums.ResultCode;
import com.qy.dome.domain.BaseQuery;
import com.qy.dome.domain.BaseResult;
import com.qy.dome.domain.PageResult;

/**
 * ${table.comment} 前端控制器
 * @author ${author}
 */
@RestController
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/${table.entityPath}")
#if(${superControllerClass})
@Api(value = "${table.comment}接口")
public class ${table.controllerName} extends ${superControllerClass}<${entity}> {
#else
@Api(value = "${table.comment}接口", description = "用作${table.comment}演示")
public class ${table.controllerName} {
#end

#foreach($field in ${table.fields})
    #if(${field.keyFlag})
        #set($keyPropertyName=${field.propertyName})
        #set($keyPropertyAttr=${field.propertyType})
    #end
#end

#set ($servicePropertyName = $table.serviceName.substring(0,1).toLowerCase() + $table.serviceName.substring(1,$table.serviceName.length()))
#set ($classname = $entity.substring(0,1).toLowerCase() + $entity.substring(1,$entity.length()))
    @Autowired
    private ${table.serviceName} ${servicePropertyName};

    @Autowired
    private MessageSource messageSource;

    /**
     * 查询列表数据
     */
    @GetMapping("/list")
    @ApiOperation(value = "${table.comment}", notes = "获取${table.comment}列表")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "currentPage", value = "当前页码", paramType = "query"),
            @ApiImplicitParam(name = "pageSize", value = "每页条数", paramType = "query")
    })
    public PageResult list(@ApiIgnore BaseQuery baseQuery){
        Page page=new Page(baseQuery.getCurrentPage(),baseQuery.getPageSize());
        Page pageList=${servicePropertyName}.selectPage(page,new EntityWrapper<${entity}>());
        return PageResult.successResult(pageList.getTotal(),baseQuery.getCurrentPage(),baseQuery.getPageSize(),pageList.getRecords());
    }


    /**
     * 信息
     */
    @GetMapping("/info/{${keyPropertyName}}")
    @ApiOperation(value = "${table.comment}", notes = "获取${table.comment}详情信息")
    public BaseResult info(@PathVariable("${keyPropertyName}") ${keyPropertyAttr} ${keyPropertyName}){
        ${entity} ${classname} = ${servicePropertyName}.getById(${keyPropertyName});
        return BaseResult.successResult(${classname});
    }

    /**
     * 保存
     */
    @PostMapping("/save")
    @ApiOperation(value = "${table.comment}", notes = "保存${table.comment}信息")
    public BaseResult save(@RequestBody ${entity} ${classname}){
        boolean retFlag= ${servicePropertyName}.save(${classname});
        if(!retFlag){
            return BaseResult.failure(ResultCode.RESOURCE_ERROR);
        }
        return BaseResult.ok();
    }

    /**
     * 修改
     */
    @PostMapping("/update")
    @ApiOperation(value = "${table.comment}", notes = "更新${table.comment}信息")
    public BaseResult update(@RequestBody ${entity} ${classname}){
        boolean retFlag= ${servicePropertyName}.updateById(${classname});
        if(!retFlag){
            return BaseResult.failure(ResultCode.RESOURCE_ERROR);
        }
        return BaseResult.ok();
    }

    /**
     * 删除
     */
    @PostMapping("/delete/{${keyPropertyName}}")
    @ApiOperation(value = "${table.comment}", notes = "删除${table.comment}信息")
    public BaseResult delete(@PathVariable("${keyPropertyName}") ${keyPropertyAttr} ${keyPropertyName}){
        boolean retFlag= ${servicePropertyName}.removeById(${keyPropertyName});
        if(!retFlag){
            return BaseResult.failure(ResultCode.RESOURCE_ERROR);
        }
        return BaseResult.ok();
    }
}
